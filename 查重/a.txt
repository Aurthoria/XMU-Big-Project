#include <iostream>
#include<stdio.h>
#include<string.h>
#include<algorithm>
#define INF 100001
using namespace std;
int V,lenE,pre[100002];
struct Edge
{
    int u,v,w;
}E[200008];
bool cmp(Edge a,Edge b)
{
    return a.w<b.w?true:false;
}
int find(int x)
{
    int t=x;
    while(pre[t]!=t) t=pre[t];
    if(x!=t) {pre[x]=t;x=pre[x];}//优化查找速度
    return t;
}
void KruskalMST(void)
{
    int sum=0;
    int cnt=1;
    sort(E,E+lenE,cmp);
    for(int i=1;i<=V;i++)
        pre[i]=i;
    for(int i=0;i<lenE;i++)
    {
        int u=E[i].u,v=E[i].v,w=E[i].w;
        int fu=find(u),fv=find(v);
        if(fu!=fv)
        {
            sum+=w;
            pre[fu]=fv;
            if(++cnt==V) break;
        }
    }
    cout<<(cnt==V?sum:-1);
}
int main()
{
    cin>>V>>lenE;
    for(int i=0;i<lenE;i++)
        cin>>E[i].u>>E[i].v>>E[i].w;
    KruskalMST();
    return 0;
}
